
[project]
name = "deployml-core"
version = "0.0.1"
description = "Infra for academia"
authors = [
    {name = "Drew Hoang", email = "codentell@gmail.com"},
    {name = "Jarvin Bayona", email = "jarvin.bayona@gmail.com"},
    {name = "Grant Nitta", email = "gtnitta@gmail.com"},
    {name = "Robert Clements", email = "rclements@usfca.edu"}
]
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = {file = "LICENSE"}
keywords = ["mlops", "deployment", "infrastructure", "cloud", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "typer",
    "pyyaml", 
    "jinja2",
    "rich",
    "google-cloud-storage>=3.1.1,<4.0.0",
    "ipython>=9.0.0",
    "jupyter>=1.0.0",
    "requests>=2.28.0",
    "pandas>=2.2.1",
    "mlflow>=3.4.0"
]

[project.optional-dependencies]
test = [
    "pytest>=8.4.1",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.10.0",
    "coverage[toml]>=7.0.0",
]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0", 
    "pytest-mock>=3.10.0",
    "coverage[toml]>=7.0.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "mypy>=1.0.0",
    "pre-commit>=4.3.0",
]

[project.scripts]
deployml = "deployml.cli.cli:main"

[tool.poetry]
packages = [{include = "deployml", from = "src"}]

[tool.poetry.group.test.dependencies]
pytest = ">=8.4.1"
pytest-cov = ">=7.0.0"
pytest-mock = ">=3.10.0"
coverage = {extras = ["toml"], version = ">=7.0.0"}

[tool.poetry.group.dev.dependencies]
pytest = ">=8.4.2"
pytest-cov = ">=7.0.0"
pytest-mock = ">=3.10.0"
coverage = {extras = ["toml"], version = ">=7.0.0"}
black = ">=25.1.0"
isort = ">=6.0.1"
flake8 = ">=7.3.0"
mypy = ">=1.0.0"
pre-commit = ">=4.3.0"



[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=deployml",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.tox/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["deployml"]

# Mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
