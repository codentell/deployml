{% if create_artifact_bucket %}
resource "google_storage_bucket" "mlflow_artifact" {
  name          = var.artifact_bucket
  location      = var.region
  force_destroy = true

  labels = {
    component  = "mlflow-artifacts"
    managed-by = "terraform"
  }
}
{% endif %}

provider "{% if cloud == 'gcp' %}google{% elif cloud == 'aws' %}aws{% else %}{{cloud}}{% endif%}" {
    {% if cloud == "gcp" %}
    project = var.project_id
    region = var.region
    {% elif cloud == "aws" %}
    region = var.region
    {% endif %}
}


{% for stage in stack %}
  {% for stage_name, tool in stage.items() %}
module "{{ stage_name }}_{{ tool.name }}" {
  source = "./modules/{{ tool.name }}/cloud/{{ cloud }}/{{ deployment_type }}"
  count  = var.enable_{{ stage_name }}_{{ tool.name }} ? 1 : 0
  
  project_id = var.project_id
  region     = var.region
  
  # Control what gets created based on the module purpose
  create_service = {% if stage_name == "experiment_tracking" %}true{% else %}false{% endif %}
  allow_public_access = var.allow_public_access
  
  # Resource configuration
  cpu_limit = var.cpu_limit
  memory_limit = var.memory_limit
  cpu_request = var.cpu_request
  memory_request = var.memory_request
  max_scale = var.max_scale
  container_concurrency = var.container_concurrency
  
  # Always pass artifact_bucket to all modules (needed for env vars)
  artifact_bucket = {% if create_artifact_bucket %}google_storage_bucket.mlflow_artifact.name{% else %}var.artifact_bucket{% endif %}
  
  {% for key, value in tool.params.items() %}
    {%- set resource_params = ["cpu_limit", "memory_limit", "cpu_request", "memory_request", "max_scale", "container_concurrency"] -%}
    {% if key == "backend_store_uri" %}
  backend_store_uri = var.backend_store_uri != "" ? var.backend_store_uri : "${var.db_type}+pymysql://${var.db_user}:${var.db_password}@127.0.0.1:${var.db_port}/${var.db_name}"
    {% elif key == "image" %}
  image = var.{{ stage_name }}_{{ tool.name }}_image != "" ? var.{{ stage_name }}_{{ tool.name }}_image : var.global_image
    {% elif key == "artifact_bucket" %}
  # Skip - already handled above
    {% elif key not in resource_params and key != "create_artifact_bucket" %}
  {{ key }} = var.{{ key }}
    {% endif %}
  {% endfor %}
}
  {% endfor %}
{% endfor %}

{% for stage in stack %}
  {% for stage_name, tool in stage.items() %}
output "{{ stage_name }}_{{ tool.name }}_url" {
  value = var.enable_{{ stage_name }}_{{ tool.name }} && length(module.{{ stage_name }}_{{ tool.name }}) > 0 ? module.{{ stage_name }}_{{ tool.name }}[0].service_url : ""
}

output "{{ stage_name }}_{{ tool.name }}_bucket" {
  value = var.enable_{{ stage_name }}_{{ tool.name }} && length(module.{{ stage_name }}_{{ tool.name }}) > 0 ? module.{{ stage_name }}_{{ tool.name }}[0].bucket_name : ""
}
  {% endfor %}
{% endfor %}

{% if create_artifact_bucket %}
output "mlflow_artifact_bucket" {
  value = google_storage_bucket.mlflow_artifact.name
}
{% else %}
output "mlflow_artifact_bucket" {
  value = var.artifact_bucket
}
{% endif %}

